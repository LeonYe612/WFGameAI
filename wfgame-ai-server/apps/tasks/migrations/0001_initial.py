# Generated by Django 4.2.21 on 2025-05-30 11:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        (
            "scripts",
            "0008_rename_scripts_scr_name_b54d87_idx_ai_script_name_a42299_idx_and_more",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        (
            "devices",
            "0002_rename_devices_dev_device__e2c19e_idx_ai_device_device__88a0e8_idx_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="任务名称")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "等待中"),
                            ("running", "执行中"),
                            ("completed", "已完成"),
                            ("failed", "失败"),
                            ("cancelled", "已取消"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        choices=[(0, "低"), (1, "中"), (2, "高")],
                        default=1,
                        verbose_name="优先级",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="任务描述")),
                (
                    "schedule_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="计划执行时间"
                    ),
                ),
                (
                    "start_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="开始时间"
                    ),
                ),
                (
                    "end_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="结束时间"
                    ),
                ),
                (
                    "execution_time",
                    models.FloatField(
                        blank=True, null=True, verbose_name="执行时长(秒)"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_tasks",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
            ],
            options={
                "verbose_name": "测试任务",
                "verbose_name_plural": "测试任务",
                "db_table": "ai_task",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TaskScript",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.IntegerField(default=0, verbose_name="执行顺序")),
                (
                    "timeout",
                    models.IntegerField(default=3600, verbose_name="超时时间(秒)"),
                ),
                (
                    "retry_count",
                    models.IntegerField(default=0, verbose_name="重试次数"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "script",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="scripts.script",
                        verbose_name="脚本",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tasks.task",
                        verbose_name="任务",
                    ),
                ),
            ],
            options={
                "verbose_name": "任务脚本",
                "verbose_name_plural": "任务脚本",
                "db_table": "ai_task_script",
                "ordering": ["order"],
                "unique_together": {("task", "script", "order")},
            },
        ),
        migrations.CreateModel(
            name="TaskGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="组名")),
                ("description", models.TextField(blank=True, verbose_name="描述")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
            ],
            options={
                "verbose_name": "任务组",
                "verbose_name_plural": "任务组",
                "db_table": "ai_task_group",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TaskDevice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "等待中"),
                            ("running", "执行中"),
                            ("completed", "已完成"),
                            ("failed", "失败"),
                            ("cancelled", "已取消"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
                (
                    "start_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="开始时间"
                    ),
                ),
                (
                    "end_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="结束时间"
                    ),
                ),
                (
                    "execution_time",
                    models.FloatField(
                        blank=True, null=True, verbose_name="执行时长(秒)"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="错误信息"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="devices.device",
                        verbose_name="设备",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tasks.task",
                        verbose_name="任务",
                    ),
                ),
            ],
            options={
                "verbose_name": "任务设备",
                "verbose_name_plural": "任务设备",
                "db_table": "ai_task_device",
                "ordering": ["created_at"],
            },
        ),
        migrations.AddField(
            model_name="task",
            name="devices",
            field=models.ManyToManyField(
                through="tasks.TaskDevice", to="devices.device", verbose_name="目标设备"
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="group",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="tasks",
                to="tasks.taskgroup",
                verbose_name="任务组",
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="scripts",
            field=models.ManyToManyField(
                through="tasks.TaskScript", to="scripts.script", verbose_name="关联脚本"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(fields=["status"], name="ai_task_status_6243e0_idx"),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(fields=["priority"], name="ai_task_priorit_9df455_idx"),
        ),
    ]
