import{l as L,a as R,e as h,r as B,g as $,s as b,i as D,b as q,c as I,d as E,u as J}from"./scripts-d29b0ea0.js";import{s as c}from"./request-2aeceb02.js";import{r,d as w,aE as o}from"./index-fbbdd03e.js";function te(){const u=r([]),M=r([]),S=r(!1),y=r(""),m=r({total:0,included_in_log:0,excluded_from_log:0,categories:{}}),v=r(""),f=r(""),F=r(""),_=r(""),P=r("table"),p=r("filename"),d=r("asc"),i=r({python_path:"python",debug_cmd:"record_script.py",record_cmd:"record_script.py --record",replay_cmd:"replay_script.py --show-screens"}),C=w(()=>{const e=u.value.length,t=u.value.filter(n=>n.include_in_log).length,a=e-t,s={};return u.value.forEach(n=>{n.category&&(s[n.category]=(s[n.category]||0)+1)}),{total:e,included_in_log:t,excluded_from_log:a,categories:s}}),x=w(()=>{let e=[...u.value];if(v.value){const t=v.value.toLowerCase();e=e.filter(a=>{var s,n,g;return((s=a.filename)==null?void 0:s.toLowerCase().includes(t))||((n=a.category)==null?void 0:n.toLowerCase().includes(t))||((g=a.description)==null?void 0:g.toLowerCase().includes(t))})}if(f.value&&(e=e.filter(t=>t.category===f.value)),F.value&&(e=e.filter(t=>t.script_type===F.value)),_.value!==""){const t=_.value==="true";e=e.filter(a=>a.include_in_log===t)}return p.value&&(e=e.sort((t,a)=>{const s=t[p.value]||"",n=a[p.value]||"",g=s.toString().localeCompare(n.toString());return d.value==="asc"?g:-g})),e}),l=async()=>{await c({apiFunc:L,onBeforeRequest:()=>{S.value=!0,y.value=""},onSucceed:e=>{u.value=e,m.value=C.value},onFailed:e=>{y.value=e.message||"获取脚本列表失败",u.value=[]},onCompleted:()=>{S.value=!1}})};return{scripts:u,categories:M,loading:S,error:y,stats:m,searchQuery:v,categoryFilter:f,typeFilter:F,includeInLogFilter:_,viewMode:P,sortField:p,sortDirection:d,settings:i,computedStats:C,filteredAndSortedScripts:x,fetchScripts:l,fetchCategories:async()=>{await c({apiFunc:R,onSucceed:e=>{M.value=e},onFailed:e=>{console.error("获取脚本分类失败:",e)}})},executeDebug:async()=>{const e=`${i.value.python_path} ${i.value.debug_cmd}`;await c({apiFunc:h,apiParams:e,enableSucceedMsg:!0,succeedMsgContent:"调试命令执行成功！",onFailed:()=>{o("调试命令执行失败",{type:"error"})}})},executeRecord:async()=>{const e=`${i.value.python_path} ${i.value.record_cmd}`;await c({apiFunc:h,apiParams:e,enableSucceedMsg:!0,succeedMsgContent:"录制命令执行成功！",onFailed:()=>{o("录制命令执行失败",{type:"error"})}})},performReplay:async e=>{await c({apiFunc:B,apiParams:e,enableSucceedMsg:!0,succeedMsgContent:"脚本回放开始执行！",onFailed:()=>{o("脚本回放失败",{type:"error"})}})},getScript:async e=>{let t=null;return await c({apiFunc:$,apiParams:e,onSucceed:a=>{t=a},onFailed:()=>{o("获取脚本内容失败",{type:"error"})}}),t},saveScript:async(e,t)=>{await c({apiFunc:b,apiParams:[e,t],enableSucceedMsg:!0,succeedMsgContent:"脚本保存成功！",onSucceed:()=>{l()},onFailed:()=>{o("脚本保存失败",{type:"error"})}})},createScript:async(e,t)=>{await c({apiFunc:b,apiParams:[e,t],enableSucceedMsg:!0,succeedMsgContent:"脚本创建成功！",onSucceed:()=>{l()},onFailed:()=>{o("脚本创建失败",{type:"error"})}})},importSingleScript:async e=>{await c({apiFunc:D,apiParams:e,enableSucceedMsg:!0,succeedMsgContent:"脚本导入成功！",onSucceed:()=>{l()},onFailed:()=>{o("脚本导入失败",{type:"error"})}})},importBatchScripts:async e=>{await c({apiFunc:q,apiParams:e,enableSucceedMsg:!0,succeedMsgContent:"批量导入完成！",onSucceed:()=>{l()},onFailed:()=>{o("批量导入失败",{type:"error"})}})},duplicateScript:async(e,t)=>{await c({apiFunc:I,apiParams:[e,t],enableSucceedMsg:!0,succeedMsgContent:"脚本复制成功！",onSucceed:()=>{l()},onFailed:()=>{o("脚本复制失败",{type:"error"})}})},removeScript:async e=>{await c({apiFunc:E,apiParams:e,enableSucceedMsg:!0,succeedMsgContent:"脚本删除成功！",onSucceed:()=>{l()},onFailed:()=>{o("脚本删除失败",{type:"error"})}})},toggleScriptLogStatus:async(e,t)=>{await c({apiFunc:J,apiParams:[e,t],enableSucceedMsg:!0,succeedMsgContent:`脚本${t?"已加入":"已移出"}日志！`,onSucceed:()=>{const a=u.value.find(s=>s.filename===e);a&&(a.include_in_log=t),m.value=C.value},onFailed:()=>{o("更新脚本日志状态失败",{type:"error"})}})},sortBy:e=>{p.value===e?d.value=d.value==="asc"?"desc":"asc":(p.value=e,d.value="asc")},loadSettings:()=>{try{const e=localStorage.getItem("scriptSettings");if(e){const t=JSON.parse(e);i.value={...i.value,...t}}}catch(e){console.error("加载设置失败:",e)}},saveSettings:e=>{try{i.value={...e},localStorage.setItem("scriptSettings",JSON.stringify(i.value)),o("设置保存成功",{type:"success"})}catch(t){console.error("保存设置失败:",t),o("设置保存失败",{type:"error"})}}}}export{te as useScriptsManagement};
