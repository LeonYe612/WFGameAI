import{aQ as r,r as u,d as h,aE as l}from"./index-41f05ddf.js";import{s as n}from"./request-28f7529e.js";const E=()=>r.request("get","/api/data/sources"),j=a=>r.request("post","/api/data/sources",{data:a}),O=(a,c)=>r.request("put",`/api/data/sources/${a}`,{data:c}),k=a=>r.request("delete",`/api/data/sources/${a}`),B=a=>r.request("post",`/api/data/sources/${a}/test`),N=a=>r.request("post",`/api/data/sources/${a}/refresh`),Q=a=>r.request("get",`/api/data/test-data/${a}`),z=(a,c)=>{const d=new FormData;return d.append("file",a),c&&d.append("sourceId",c),r.request("post","/api/data/import",{data:d})},J=(a,c)=>r.request("get",`/api/data/export/${a}?format=${c}`,{responseType:"blob"}),V=(a,c)=>r.request("post","/api/data/analysis",{data:{sourceId:a,analysisType:c}}),_=a=>r.request("get",`/api/data/analysis/${a}`);function X(){const a=u([]),c=u([]),d=u([]),S=u(!1),m=u(""),F=u({totalSources:0,connectedSources:0,totalRecords:0,recentlyUpdated:0}),w=u(null),f=u(""),g=u(""),v=u(""),M=h(()=>{const e=a.value.length,t=a.value.filter(i=>i.status==="connected").length,s=a.value.reduce((i,y)=>i+(y.recordCount||0),0),o=a.value.filter(i=>{const y=new Date(i.lastUpdated),D=new Date;return D.setDate(D.getDate()-3),y>D}).length;return{totalSources:e,connectedSources:t,totalRecords:s,recentlyUpdated:o}}),q=h(()=>{let e=[...a.value];if(f.value){const t=f.value.toLowerCase();e=e.filter(s=>{var o,i,y;return((o=s.name)==null?void 0:o.toLowerCase().includes(t))||((i=s.type)==null?void 0:i.toLowerCase().includes(t))||((y=s.description)==null?void 0:y.toLowerCase().includes(t))})}return g.value&&(e=e.filter(t=>t.status===g.value)),v.value&&(e=e.filter(t=>t.type===v.value)),e}),p=async()=>{await n({apiFunc:E,onBeforeRequest:()=>{S.value=!0,m.value=""},onSucceed:e=>{a.value=e,F.value=M.value},onFailed:e=>{m.value=e.message||"获取数据源列表失败",a.value=[]},onCompleted:()=>{S.value=!1}})},b=async e=>{await n({apiFunc:j,apiParams:e,enableSucceedMsg:!0,succeedMsgContent:"数据源创建成功！",onSucceed:()=>{p()},onFailed:()=>{l("创建数据源失败",{type:"error"})}})},x=async(e,t)=>{await n({apiFunc:O,apiParams:[e,t],enableSucceedMsg:!0,succeedMsgContent:"数据源更新成功！",onSucceed:()=>{p()},onFailed:()=>{l("更新数据源失败",{type:"error"})}})},R=async e=>{await n({apiFunc:k,apiParams:e,enableSucceedMsg:!0,succeedMsgContent:"数据源删除成功！",onSucceed:()=>{p()},onFailed:()=>{l("删除数据源失败",{type:"error"})}})},T=async e=>{let t=!1;return await n({apiFunc:B,apiParams:e,onSucceed:s=>{t=s.success,l(s.message,{type:s.success?"success":"error"})},onFailed:()=>{l("连接测试失败",{type:"error"})}}),t},P=async e=>{await n({apiFunc:N,apiParams:e,enableSucceedMsg:!0,succeedMsgContent:"数据源刷新成功！",onSucceed:()=>{p()},onFailed:()=>{l("刷新数据源失败",{type:"error"})}})},$=async e=>{await n({apiFunc:Q,apiParams:e,onBeforeRequest:()=>{S.value=!0},onSucceed:t=>{c.value=t,w.value=a.value.find(s=>s.id===e)||null},onFailed:t=>{m.value=t.message||"获取测试数据失败",c.value=[]},onCompleted:()=>{S.value=!1}})},L=async e=>{let t=!1;return await n({apiFunc:z,apiParams:[e.file,e.sourceId],enableSucceedMsg:!0,succeedMsgContent:"数据导入成功！",onSucceed:s=>{t=s.success,s.success&&p()},onFailed:()=>{l("数据导入失败",{type:"error"})}}),t},U=async e=>{await n({apiFunc:J,apiParams:[e.sourceId,e.format],onSucceed:t=>{const s=window.URL.createObjectURL(t),o=document.createElement("a");o.href=s,o.download=`data_export.${e.format}`,document.body.appendChild(o),o.click(),document.body.removeChild(o),window.URL.revokeObjectURL(s),l("数据导出成功！",{type:"success"})},onFailed:()=>{l("数据导出失败",{type:"error"})}})},A=async(e,t)=>{await n({apiFunc:V,apiParams:[e,t],enableSucceedMsg:!0,succeedMsgContent:"数据分析完成！",onSucceed:()=>{C(e)},onFailed:()=>{l("数据分析失败",{type:"error"})}})},C=async e=>{await n({apiFunc:_,apiParams:e,onSucceed:t=>{d.value=t},onFailed:t=>{m.value=t.message||"获取分析结果失败",d.value=[]}})};return{dataSources:a,testData:c,analysisResults:d,loading:S,error:m,stats:F,currentDataSource:w,searchQuery:f,statusFilter:g,typeFilter:v,computedStats:M,filteredDataSources:q,fetchDataSources:p,createNewDataSource:b,updateExistingDataSource:x,removeDataSource:R,testConnection:T,refreshDataSourceData:P,fetchTestData:$,importDataFile:L,exportDataFile:U,analyzeData:A,fetchAnalysisResults:C,getStatusText:e=>({connected:"已连接",disconnected:"未连接",error:"连接失败"})[e]||e,getStatusType:e=>({connected:"success",disconnected:"info",error:"danger"})[e]||"info",getTypeText:e=>({excel:"Excel文件",csv:"CSV文件",database:"数据库",json:"JSON文件"})[e]||e}}export{X as useDataManagement};
